bitwise:

- set bit of x at ith position:
x |= 1 << i;

- clear bit of x at ith position:
x &= ~ ( 1 << i );

- Clear last n bits
x &= (-1) << n; 

- Clear bits between i and j position where i > j
set bits till j position
a = ( 1 << j ) - 1;
b = (-1) << ( i + 1 );
mask = a | b;

- clear i bits from end
x &= (-1) << i;

- Update bit val at ith position
clear first and then update.
mask = ~ ( 1 << i );
x = x & mask | (val << i);

- Count set bits
shift right and & with 0x1
while (x > 0){
    ans += x & 0x1;
    x >>= 1;
}
return ans;

OR hack

while(x){
    x = x & (x-1) ; 
    cnt++;
}
